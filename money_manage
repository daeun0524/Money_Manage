{
  "cells": [
    {
      "metadata": {
        "trusted": true,
        "scrolled": false
      },
      "cell_type": "code",
      "source": [
        " import sys\n",
        " \n",
        "user=[[]for i in range(5)]#유저 리스트\n",
        "password_list = [] \n",
        "account = []\n",
        "balance=[] #사용자별 잔고를 위한 리스트\n",
        " \n",
        "money_plus=[[0 for i in range(3)]for row in range(5)]#5개, 요소 3개 Analysis ->수입 항목 카테고리별 저장 위함\n",
        "money_minus=[[0 for i in range(4)]for row in range (5)]#5개, 요소 4개 Analysis ->지출 항목 카테고리별 저장위함\n",
        " \n",
        "list_plus=[\"회사\",\"용돈\",\"기타\"] #수입 항목\n",
        "list_minus=[\"음식\",\"쇼핑\",\"생활\",\"기타\"] #지출 항목\n",
        " \n",
        "budget=[] #자산관리-예상지출 금액\n",
        "budget_flag=[] #자산관리 시행 여부\n",
        " \n",
        "exist_day=[] #월별 출력시 기록이 있는 날짜를 체크하기 위해 \n",
        " \n",
        "def login():\n",
        "    count = 0\n",
        "    while True:\n",
        "        print(\"***********************Login**********************\\n\")\n",
        "        name = input(\"이름:\")\n",
        "        if name in account: #이름이 있는 지 확인\n",
        "            while(True):\n",
        "                if count < 3:#count는 3시에 화면으로 돌아간다\n",
        "                    password = int(input('암호(숫자로 입력해주세요):'))\n",
        "                    if password in password_list:##암호가 있는 지 확인\n",
        "                        if account.index(name) == password_list.index(password):#계정과 암호의 index가 일치하는 경우 성공출력                     \n",
        "                            print(\"[%s님 로그인 성공!]\" % name)\n",
        "                            print(\"[%s님 안녕하세요!]\" % name)\n",
        "                            print(\"\")\n",
        "                            print(\"***************************************************\")\n",
        "                            print(\"\")\n",
        "                            global index\n",
        "                            index= account.index(name) #현재 로그인 한 유저의 인덱스\n",
        "                            #print(\"현재 로그인 한 유저의 인덱스: \",index)\n",
        "                            menu() \n",
        "                            break   \n",
        "                        else:\n",
        "                            print(\"[암호 오류! 다시 입력하세요.]\")\n",
        "                            count += 1\n",
        "                    else:\n",
        "                        print(\"[암호 오류! 다시 입력하세요.]\")\n",
        "                        count+=1\n",
        "                else:\n",
        "                    print(\"[암호 3번 오류! 로그인 화면으로 돌아갑니다.]\")\n",
        "                    break \n",
        "        else:\n",
        "            print(\"데이터가 없습니다!\")\n",
        "            break\n",
        "        break\n",
        " \n",
        "def register():\n",
        "    print(\"**********************Register*********************\\n\")\n",
        "    name = input(\"이름:\")\n",
        "    account.append(name)\n",
        " \n",
        "    while True:\n",
        "        password = int(input('암호(숫자로 입력해주세요):'))\n",
        "        password_confirm = int(input(\"암호 확인:\"))\n",
        "        if password_confirm != password:#두 번 입력한 암호가 일치하는지 판단\n",
        "            print(\"[암호 불일치! 암호를 다시 입력해주세요.] \")\n",
        "            continue\n",
        "        else:\n",
        "            password_list.append(password)#암호 저장\n",
        "            budget.append(0)\n",
        "            budget_flag.append(False)\n",
        "            balance.append(0)\n",
        "            print(\"[%s 님 회원가입 성공]\" % name)\n",
        "            print(\"\")\n",
        "            print(\"***************************************************\")\n",
        "            break\n",
        "        \n",
        "def calendar(year_int,month_int):\n",
        "    #기록 일수 총합\n",
        "    sum = 0\n",
        "    if year_int >= 1900:\n",
        "        for year_every in range(1900, year_int):  #1900년부터 입력까지의 연도 날짜 계산한다\n",
        "            if (year_every % 4 == 0 and year_every % 100 != 0) or \\\n",
        "                                    year_every % 400 == 0:  # 윤년 366일 아니면 365일\n",
        "                sum += 366\n",
        "            else:\n",
        "                sum += 365\n",
        "        for month_every in range(1, month_int): # 1월부터 입력월까지의 총 일수 계산한다 \n",
        "            if month_every == 4 or month_every == 6 or \\\n",
        "                            month_every == 9 or month_every == 11:\n",
        "                sum += 30\n",
        "            elif month_every == 2:\n",
        "                if (year_int % 1 == 0 and year_int % 100 != 0) or \\\n",
        "                                        year_int % 400 == 0:\n",
        "                    sum += 29\n",
        "                else:\n",
        "                    sum += 28\n",
        "            else:\n",
        "                sum += 31\n",
        "        day = 0#매월 일수를 정의한다\n",
        "        #당월의 첫날을 무슨 요일인지 계산한다\n",
        "        weak = sum % 7\n",
        " \n",
        "        print(\"월\\t화\\t수\\t목\\t금\\t토\\t일\")\n",
        "        # 월 일수를 판단한다.\n",
        "        if month_int == 4 or month_int == 6 or month_int == 9 or month_int == 11:\n",
        "            day = 30\n",
        "        elif month_int == 2:\n",
        "            if (year_int % 4 == 0 and year_int % 100 != 0) or \\\n",
        "                                    year_int % 400 == 0:\n",
        "                day = 29\n",
        "            else:\n",
        "                day = 28\n",
        "        else:\n",
        "            day = 31\n",
        "        print(\"\\t\"*weak,end=\"\")#출력이 지정된 빈 칸 수를 첫째 날과 요일으로 일치시킨다 \n",
        "        i = 1\n",
        "        while i <= day: #몇 월 조회\n",
        "            weakend = ((sum+i)-1)% 7\n",
        "            # 여수가 6이면 행을 변경한다.그렇지 않으면 빈 칸을 출력한다.\n",
        "            if weakend == 6:\n",
        "                print(\"%d\" %i)\n",
        "            elif search_existday(i):#입력한 날짜 중 i와 같은 경우 별표 표시\n",
        "                print(i,\"*\",end=\"\\t\")\n",
        "            else:\n",
        "                print(i,end=\"\\t\")\n",
        "            i += 1\n",
        "            \n",
        "    exist_day.clear()\n",
        "\n",
        "def search_existday(i): #월별 출력 중 일정이 있는 날짜를 찾기 위한 함수..\n",
        "    for day in range(len(exist_day)):\n",
        "        if i==exist_day[day]:\n",
        "            return True\n",
        "    return False\n",
        " \n",
        "def menu():\n",
        "    while(1):\n",
        "        print(\"*********************용돈기입장********************\")\n",
        "        print(\"1. Retrieve\")\n",
        "        print(\"2. Add\")\n",
        "        print(\"3. Delete\")\n",
        "        print(\"4. Update\")\n",
        "        print(\"5. Budget Management\")\n",
        "        print(\"6. Analysis\")\n",
        "        print(\"7. Logout\")\n",
        "        print(\"8. Quit\")\n",
        "        print(\"***************************************************\")\n",
        "        temp_n=input(\">\")\n",
        " \n",
        "        if temp_n==\"\":\n",
        "            print(\"\\n[input number!]\")\n",
        "        else:\n",
        "            n=int(temp_n)\n",
        "            if(n==1):#retrieve\n",
        "                print(\"**********************Retrieve*********************\")\n",
        "                if(len(user[index])==0):\n",
        "                    print(\"[조회할 데이터가 없습니다]\")\n",
        "                else:\n",
        "                    #수입, 지출 저장을 위한 변수\n",
        "                    income=0\n",
        "                    spend=0\n",
        "                    print(\"\")\n",
        "                    num=int(input(\"[조회 항목] 1. 전체조회 2. 월별 조회 3. 일별 조회 : \"))\n",
        "                    \n",
        "                    if(num==1):\n",
        "                        print(\"---------------------------------------------------------------\")\n",
        "                        print(\"\\n<<\",account[index],\"님의 내역>>\\n\")\n",
        "                        print(\"---------------------------------------------------------------\")\n",
        "                        print(\"순번\\t날짜\\t\\t항목\\t\\t내용\\t\\t금액\")\n",
        "                        for i in range(len(user[index])):#user 0, user1, user3,...\n",
        "                            if (user[index][i][4]).startswith('+'):\n",
        "                                income+=int(user[index][i][4][1:])\n",
        "                            elif (user[index][i][4]).startswith('-'):\n",
        "                                spend+=int(user[index][i][4][1:])\n",
        "                            print(i+1,\"\\t\",user[index][i][1][4:6],\"/\",user[index][i][1][6:],\"\\t\",user[index][i][2],\"\\t\\t\",user[index][i][3],\"\\t\",user[index][i][4])\n",
        "                        print(\"---------------------------------------------------------------\")\n",
        "                        print(\"                                          [잔고: {}원]\".format(balance[index]))\n",
        "                        print(\"총 수입: {}원 / 총 지출: {}원\".format(income,spend))\n",
        "                        print(\"---------------------------------------------------------------\")\n",
        "                        \n",
        "                        if budget_flag[index]==True: #자산관리 한 경우 \n",
        "                            print(\"----------------------Budget Management------------------------\")\n",
        "                            if spend > budget[index]:\n",
        "                                print(\"[예상지출 {}원 보다 {}원 과소비 했습니다.]\".format(budget[index],spend-budget[index]))\n",
        "                                print(\"[지출 관리에 신경 써 주세요.]\")\n",
        "                            elif spend == budget[index]:\n",
        "                                print(\"[예상지출 {}원과 일치하게 소비 했습니다.]\".format(budget[index]))\n",
        "                                print(\"[지출 관리가 성공적 입니다.]\")\n",
        "                            elif spend < budget[index]:\n",
        "                                print(\"예상지출 {}원 까지 {}원 남았습니다.]\".format(budget[index], budget[index]-spend))\n",
        "                                print(\"[지출 관리가 성공적 입니다.]\")\n",
        "                            print(\"---------------------------------------------------------------\")                         \n",
        "                   \n",
        "                    elif(num==2):\n",
        "                        date=input(\"날짜(yyyymm): \")\n",
        "                        print(\"---------------------------------------------------------------\")\n",
        "                        print(\"\\n<<\",account[index],\"님의 내역>>\\n\")\n",
        "                        print(\"---------------------------------------------------------------\")\n",
        "                        print(\"-----------------------{}년 {}월--------------------------\".format(date[0:4],date[4:6]))\n",
        " \n",
        "                        for i in range(len(user[index])):\n",
        "                            #사용내역이 있는 날짜 체크를 위해\n",
        "                            if user[index][i][1][0:4]==date[0:4] and user[index][i][1][4:6]==date[4:6]:\n",
        "                                exist_day.append(int(user[index][i][1][6:])) \n",
        "                                       \n",
        "                        calendar(int(date[0:4]),int(date[4:6]))\n",
        "                        \n",
        "                        print(\"\\n\")\n",
        "                        print(\"------------------------------------------------------------\")\n",
        "                        k=1 #해당 날짜의 정보 인덱스 계산위해..\n",
        "                        for i in range(len(user[index])):\n",
        "                            if user[index][i][1][0:4]==date[0:4] and user[index][i][1][4:6]==date[4:6]:\n",
        "                                if (user[index][i][4]).startswith('+'):\n",
        "                                    income+=int(user[index][i][4][1:])\n",
        "                                elif (user[index][i][4]).startswith('-'):\n",
        "                                    spend+=int(user[index][i][4][1:])\n",
        "                                print(k,\"\\t\",user[index][i][1][4:6],\"/\",user[index][i][1][6:],\"\\t\",user[index][i][2],\"\\t\\t\",user[index][i][3],\"\\t\",user[index][i][4])\n",
        "                                k+=1\n",
        "                        print(\"---------------------------------------------------------------\")\n",
        "                        print(\"이달의 수입: {}원 / 이달의 지출: {}원\".format(income,spend))\n",
        "                        print(\"---------------------------------------------------------------\")\n",
        "                    elif(num==3):\n",
        "                        date=input(\"날짜(yyyymmdd): \")\n",
        "                        print(\"---------------------------------------------------------------\")\n",
        "                        print(\"<<\",account[index],\"님의 내역>>\\n\")\n",
        "                        print(\"-----------------------{}년 {}월 {}일------------------------\".format(date[0:4],date[4:6],date[6:]))\n",
        "                        print(\"순번\\t날짜\\t\\t항목\\t\\t내용\\t\\t금액\")\n",
        "                        k=1 #해당 날짜의 정보 인덱스 계산위해..\n",
        "                        for i in range(len(user[index])):\n",
        "                            if user[index][i][1][0:4]==date[0:4] and user[index][i][1][4:6]==date[4:6] and user[index][i][1][6:]==date[6:]:\n",
        "                                if (user[index][i][4]).startswith('+'):\n",
        "                                    income+=int(user[index][i][4][1:])\n",
        "                                elif (user[index][i][4]).startswith('-'):\n",
        "                                    spend+=int(user[index][i][4][1:])\n",
        "                                print(k,\"\\t\",user[index][i][1][4:6],\"/\",user[index][i][1][6:],\"\\t\",user[index][i][2],\"\\t\\t\",user[index][i][3],\"\\t\",user[index][i][4])\n",
        "                                k+=1\n",
        "                        print(\"---------------------------------------------------------------\")\n",
        "                        print(\"이날의 수입: {}원 / 이날의 지출: {}원\".format(income,spend))\n",
        "                        print(\"---------------------------------------------------------------\")\n",
        "                       \n",
        "                print(\"***************************************************\")\n",
        "                print(\"\")    \n",
        "            elif(n==2):#add\n",
        "                print(\"************************Add************************\")\n",
        " \n",
        "                global money_plus#값 변경위해\n",
        "                global money_minus\n",
        "               \n",
        "                print(\"\")\n",
        "                while True:\n",
        "                    date=input(\"날짜(yyyymmdd): \")\n",
        "                    if date.isdigit():#입력한 값이 숫자인지 판단\n",
        "                        money=input(\"수입 (+) 또는 지출 (-) 금액을 +/-로 구분하여 입력해주세요: \")\n",
        "                        if money.startswith('+'):#수입일 경우\n",
        "                            while True:\n",
        "                                num=int(input(\"[수입 항목] 1. 회사 2. 용돈 3. 기타 : \"))\n",
        "                                \n",
        "                                if(num==1 or num==2 or num==3):#예외처리위함\n",
        "                                    moneylist=list_plus[num-1]\n",
        "                                    inmoney=int(money[1:])#부호 빼고 얼마인지만 저장\n",
        "                                    balance[index]+=inmoney\n",
        "        \n",
        "                                    if(num==1):\n",
        "                                        money_plus[index][0]+=inmoney#수입-회사\n",
        "                                        break\n",
        "                                    elif(num==2):\n",
        "                                        money_plus[index][1]+=inmoney#수입-용돈\n",
        "                                        break\n",
        "                                    elif(num==3):\n",
        "                                        money_plus[index][2]+=inmoney#수입-기타\n",
        "                                        break\n",
        "                                else:\n",
        "                                    print(\"\\n[(1-3) 중에서 입력해주세요!]\\n\")\n",
        "                                \n",
        "                            while True:\n",
        "                                content= input(\"내용: \")\n",
        "                                if content.isdigit():#입력한 값이 숫자인지 판단\n",
        "                                    print(\"양식이 잘못되었습니다! 다시 입력하세요!\")\n",
        "                                    continue\n",
        "                                else:\n",
        "                                    user[index].append([index,date,moneylist,content,money])\n",
        "                                    break\n",
        "                            break           \n",
        "                        elif money.startswith('-'):#지출일 경우\n",
        "                            outmoney=int(money[1:])#지출인 경우 부호 빼고 얼마인지만 저장\n",
        "                            if balance[index]<outmoney:\n",
        "                                print(\"[잔고부족. 지출불가입니다.]\")\n",
        "                                break\n",
        "                            else:\n",
        "                                while True:\n",
        "                                    num=int(input(\"[지출 항목] 1. 음식 2. 쇼핑 3. 생활 4. 기타 : \"))\n",
        "                                    \n",
        "                                    if(num==1 or num==2 or num==3 or num==4):#예외 처리위함\n",
        "                                        moneylist=list_minus[num-1]\n",
        " \n",
        "                                        balance[index]-=outmoney\n",
        "                                        \n",
        "                                        if(num==1):\n",
        "                                            money_minus[index][0]+=outmoney\n",
        "                                            break\n",
        "                                        elif(num==2):\n",
        "                                            money_minus[index][1]+=outmoney\n",
        "                                            break\n",
        "                                        elif(num==3):\n",
        "                                            money_minus[index][2]+=outmoney\n",
        "                                            break\n",
        "                                        elif(num==4):\n",
        "                                            money_minus[index][3]+=outmoney\n",
        "                                            break\n",
        "                                    else:\n",
        "                                        print(\"\\n[(1-4) 중에서 입력해주세요!]\\n\")\n",
        " \n",
        "                                while True:\n",
        "                                    content= input(\"내용: \")\n",
        "                                    if content.isdigit():#입력한 값이 숫자인지 판단\n",
        "                                        print(\"양식이 잘못되었습니다! 다시 입력하세요!\")\n",
        "                                        continue\n",
        "                                    else:\n",
        "                                        user[index].append([index,date,moneylist,content,money])\n",
        "                                        break\n",
        "                                break\n",
        "                        else:\n",
        "                            print(\"+/-를 표시하여 입력해주세요!\")\n",
        "                            continue\n",
        "                    else:                                                 \n",
        "                        print(\"날짜는 숫자로 입력해주세요!\")\n",
        "                    continue\n",
        " \n",
        "                print(\"\")    \n",
        "                print(\"***************************************************\")\n",
        "                print(\"\")     \n",
        " \n",
        "            elif(n==3):#delete\n",
        "                if(len(user[index])==0):#유저 리스트가 없을 경우\n",
        "                    print(\"***********************Delete***********************\")\n",
        "                    print(\"[삭제할 데이터가 없습니다]\")\n",
        "                else:\n",
        "                    while True:\n",
        "                        print(\"***********************Delete***********************\")\n",
        "                        num = input(\"[삭제 항목] 1. 전체 삭제 2. 특정 날짜 삭제: \")\n",
        "                        if num == \"1\":\n",
        "                            choice = input(\"%s 님의 모든 데이터를 삭제하시겠습니까?(Y/N):\" % (account[index]))\n",
        "                            if choice == \"Y\" or choice == \"y\":\n",
        "                                money_plus[index]=[0,0,0]#회사,용돈,기타\n",
        "                                money_minus[index]=[0,0,0,0]#음식,쇼핑,생활,기타\n",
        "                                user[index].clear()\n",
        "                                balance[index]=0 \n",
        "                                budget[index]=0\n",
        "                                print(\"[삭제되었습니다.]\")\n",
        "                                break\n",
        "                            elif choice == \"N\" or  choice == \"n\":\n",
        "                                continue\n",
        "                            else:\n",
        "                                print(\"입력이 잘못되었습니다. 다시 입력하세요:\")\n",
        "                                continue\n",
        " \n",
        "                        elif num == \"2\":\n",
        "                            while(True):\n",
        "                                date_cnt=[] #삭제할 날짜 체크를 위한 변수\n",
        "                                date = input(\"날짜 입력(yyyymmdd):\")\n",
        "                                year = date[:4]\n",
        "                                month = date[4:6]\n",
        "                                day = date[6:]\n",
        "                                choice = input(\"%s 님의 %s년 %s월 %s일의 데이터를 삭제하시겠습니까?(Y/N):\" % (account[index],year,month, day))#날짜 값은 분할 후 출력\n",
        "                                if choice == \"Y\" or choice == \"y\":\n",
        "                                    for i in range(len(user[index])):\n",
        "                                        if date == user[index][i][1]:\n",
        "                                            date_cnt.append(i) #삭제할 날짜에 맞는 인덱스 저장\n",
        "                                            money=int(user[index][i][4][1:])#금액\n",
        "                                            \n",
        "                                            #수입\n",
        "                                            if user[index][i][2]==\"회사\":\n",
        "                                                money_plus[index][0]-=money\n",
        "                                                balance[index]-=money\n",
        "                                            elif user[index][i][2]==\"용돈\":\n",
        "                                                money_plus[index][1]-=money\n",
        "                                                balance[index]-=money\n",
        "                                            elif user[index][i][2]==\"기타\":\n",
        "                                               money_plus[index][2]-=money\n",
        "                                               balance[index]-=money\n",
        "                                            #지출\n",
        "                                            elif user[index][i][2]==\"음식\":\n",
        "                                                money_minus[index][0]-=money\n",
        "                                                balance[index]+=money\n",
        "                                            elif user[index][i][2]==\"쇼핑\":\n",
        "                                                money_minus[index][1]-=money\n",
        "                                                balance[index]+=money\n",
        "                                            elif user[index][i][2]==\"생활\":\n",
        "                                                money_minus[index][2]-=money\n",
        "                                                balance[index]+=money\n",
        "                                            elif user[index][i][2]==\"기타\":\n",
        "                                                money_minus[index][3]-=money\n",
        "                                                balance[index]+=money\n",
        "                                    if len(date_cnt) == 0:\n",
        "                                        print(\"[해당 날짜에 데이터가 없습니다! 다시 입력 해주세요.]\")\n",
        "                                        continue\n",
        "                                    else:\n",
        "                                        date_tmp=0 #date_cnt에 저장된 인덱스를 del 후에도 사용하기 위해\n",
        "                                        for i in range(len(date_cnt)):\n",
        "                                            del user[index][date_cnt[i]-date_tmp]\n",
        "                                            date_tmp+=1\n",
        "                                        print(\"[삭제되었습니다.]\")\n",
        "                                        break        \n",
        "                                elif choice == \"N\" or  choice == \"n\":\n",
        "                                    continue\n",
        "                                else:\n",
        "                                    print(\"[입력이 잘못되었습니다. 다시 입력하세요.]\")\n",
        "                                break\n",
        "                        else:\n",
        "                           print(\"[입력이 잘못되었습니다. 다시 입력하세요.]\")\n",
        "                        break\n",
        "                print(\"****************************************************\")\n",
        "    \n",
        "            elif(n==4): #update\n",
        "                if(len(user[index])==0):\n",
        "                    print(\"***********************Update***********************\")\n",
        "                    print(\"[업데이트할 데이터가 없습니다]\")\n",
        "                else:\n",
        "                    print(\"***********************Update***********************\")\n",
        "                    print(\"순번\\t날짜\\t\\t항목\\t\\t내용\\t\\t금액\")\n",
        "                    for i in range(len(user[index])):#user 0, user1, user3,...\n",
        "                        print(i+1,\"\\t\",user[index][i][1][4:6],\"/\",user[index][i][1][6:],\"\\t\",user[index][i][2],\"\\t\\t\",user[index][i][3],\"\\t\",user[index][i][4])\n",
        "                    print(\"\")\n",
        "                    while True:\n",
        "                        num = int(input(\"업데이트 항목: \"))\n",
        "                        if(num<0 or num>len(user[index])):\n",
        "                            print(\"\\n[잘못된 입력입니다. 다시 입력하세요!]\\n\")\n",
        "                        else: \n",
        "                            break\n",
        " \n",
        "                    omoney=int(user[index][num-1][4][1:])#원래 있던 금액\n",
        "                    balance[index]-=omoney\n",
        "                    print(\"\")\n",
        "                    #원래 있던 돈 빼기\n",
        "                    #수입\n",
        "                    if user[index][num-1][2]==\"회사\":\n",
        "                        money_plus[index][0]-=omoney\n",
        "                    elif user[index][num-1][2]==\"용돈\":\n",
        "                        money_plus[index][1]-=omoney\n",
        "                    elif user[index][num-1][2]==\"기타\":\n",
        "                        money_plus[index][2]-=omoney\n",
        "                    #지출\n",
        "                    elif user[index][num-1][2]==\"음식\":\n",
        "                        money_minus[index][0]-=omoney\n",
        "                    elif user[index][num-1][2]==\"쇼핑\":\n",
        "                        money_minus[index][1]-=omoney\n",
        "                    elif user[index][num-1][2]==\"생활\":\n",
        "                        money_minus[index][2]-=omoney\n",
        "                    elif user[index][num-1][2]==\"기타\":\n",
        "                        money_minus[index][3]-=omoney\n",
        " \n",
        "                    while True:\n",
        "                        date=input(\"날짜(yyyymmdd): \")\n",
        "                        if date.isdigit():\n",
        "                            money=input(\"업데이트 수입 (+) 또는 지출 (-) 금액을 +/-로 구분하여 입력해주세요: \")\n",
        "                            if money.startswith('+'):\n",
        "                                n=int(input(\"[수입 항목] 1. 회사 2. 용돈 3. 기타 : \"))\n",
        "                                moneylist=list_plus[n-1]\n",
        " \n",
        "                                inmoney=int(money[1:])\n",
        "                                balance[index]+=inmoney\n",
        "   \n",
        "                                if(n==1):\n",
        "                                    money_plus[index][0]+=inmoney\n",
        "                                elif(n==2):\n",
        "                                    money_plus[index][1]+=inmoney\n",
        "                                elif(n==3):\n",
        "                                    money_plus[index][2]+=inmoney\n",
        " \n",
        "                                while True:\n",
        "                                    content= input(\"내용: \")\n",
        "                                    if content.isdigit():\n",
        "                                        print(\"양식이 잘못되었습니다! 다시 입력하세요!\")\n",
        "                                        continue\n",
        "                                    else:\n",
        "                                        user[index][num-1]=[index,date,moneylist,content,money]\n",
        "                                    break\n",
        "                                break           \n",
        "                            elif money.startswith('-'):\n",
        "                                outmoney=int(money[1:])\n",
        "                                if balance[index]<outmoney:\n",
        "                                    print(\"[잔고부족. 지출불가입니다.]\")\n",
        "                                    break\n",
        "                                else:\n",
        "                                    n=int(input(\"[지출 항목] 1. 음식 2. 쇼핑 3. 생활 4. 기타 : \"))\n",
        "                                    moneylist=list_minus[n-1]\n",
        " \n",
        "                                    balance[index]-=outmoney\n",
        "                                \n",
        "                                    if(n==1):\n",
        "                                        money_minus[index][0]+=outmoney\n",
        "                                    elif(n==2):\n",
        "                                        money_minus[index][1]+=outmoney\n",
        "                                    elif(n==3):\n",
        "                                        money_minus[index][2]+=outmoney\n",
        "                                    elif(n==4):\n",
        "                                        money_minus[index][3]+=outmoney\n",
        "                                    \n",
        "                                    while True:\n",
        "                                        content= input(\"내용: \")\n",
        "                                        if content.isdigit():\n",
        "                                            print(\"양식이 잘못되었습니다! 다시 입력하세요!\")\n",
        "                                            continue\n",
        "                                        else:\n",
        "                                            user[index][num-1]=[index,date,moneylist,content,money]\n",
        "                                            break\n",
        "                                break\n",
        "                            else:\n",
        "                                print(\"+/-를 표시하여 입력해주세요!\")\n",
        "                                continue\n",
        "                        else:                                                 \n",
        "                            print(\"날짜는 숫자로 입력해주세요!\")\n",
        "                            continue\n",
        "              \n",
        "                    print(\"[업데이트 완료했습니다.]\")\n",
        "                print(\"****************************************************\")\n",
        "  \n",
        "            elif(n==5): #Budget Management\n",
        "                print(\"*****************Budget Management****************\")\n",
        "                print(\"\")\n",
        "                print(\"[{}님의 자산관리를 시작합니다.]\".format(account[index]))\n",
        "    \n",
        "                while(True):\n",
        "                    budget_tmp=int(input(\"예상 지출 금액: \"))\n",
        "    \n",
        "                    if budget_tmp<0:\n",
        "                        print(\"[금액 입력 오류. 다시입력하세요.]\")\n",
        "                    else:\n",
        "                        budget[index]=budget_tmp\n",
        "                        budget_flag[index]=True\n",
        "                        print(\"[등록되었습니다.]\")\n",
        "                        break\n",
        "                print(\"****************************************************\")\n",
        "                print(\"\")\n",
        " \n",
        "            elif(n==6):#분석\n",
        "                if(len(user[index])==0):\n",
        "                    print(\"***********************Analysis*********************\")\n",
        "                    print(\"[분석할 데이터가 없습니다]\")\n",
        "                    print(\"****************************************************\")\n",
        "                else: \n",
        "                    print(\"***********************Analysis*********************\")\n",
        "                    print(\"\\n<<{}님의2020년 분석자료>>\\n\".format(account[index]))\n",
        "                    print(\"\\t수입\\t\\t지출\")\n",
        " \n",
        "                    sumplus=money_plus[index][0]+money_plus[index][1]+money_plus[index][2]#회사,용돈,기타\n",
        "                    summinus=money_minus[index][0]+money_minus[index][1]+money_minus[index][2]+money_minus[index][3]#음식,쇼핑,생활,기타\n",
        "                    if sumplus==0:#수입이 없을 경우 예외처리위함\n",
        "                        rp_company=0\n",
        "                        rp_cash=0\n",
        "                        rp_etc=0\n",
        " \n",
        "                    else: \n",
        "                        rp_company=money_plus[index][0]/sumplus*100\n",
        "                        rp_cash=money_plus[index][1]/sumplus*100\n",
        "                        rp_etc=money_plus[index][2]/sumplus*100\n",
        " \n",
        "                    if summinus==0:#지출이 없을 경우 예외처리위함\n",
        "                        rm_food=0\n",
        "                        rm_shopping=0\n",
        "                        rm_living=0\n",
        "                        rm_etc=0\n",
        "                    else:\n",
        "                        rm_food=money_minus[index][0]/summinus*100\n",
        "                        rm_shopping=money_minus[index][1]/summinus*100\n",
        "                        rm_living=money_minus[index][2]/summinus*100\n",
        "                        rm_etc=money_minus[index][3]/summinus*100\n",
        " \n",
        "                    print(\"\")\n",
        "                    print(\"회사: \",round(rp_company,2),\"%\\t\",\"음식: \",round(rm_food,2),\"%\")\n",
        "                    print(\"용돈: \",round(rp_cash,2),\"%\\t\",\"쇼핑: \",round(rm_shopping,2),\"%\")\n",
        "                    print(\"기타: \",round(rp_etc,2),\"%\\t\",\"생활: \",round(rm_living,2),\"%\")\n",
        "                    print(\"\")\n",
        "                    print(\"****************************************************\")\n",
        "                    print(\"\")\n",
        "            \n",
        "            elif(n==7):\n",
        "                ans=input(\"{} 님 로그아웃 하시겠습니까?(Y/N): \".format(account[index]))\n",
        "                if ans=='Y'or ans=='y':\n",
        "                    print(\"[로그아웃 성공]\")\n",
        "                    break;\n",
        "                elif ans=='N' or ans=='n':\n",
        "                    continue\n",
        "    \n",
        "            elif(n==8):\n",
        "                print(\"[프로그램을 종료합니다.]\")\n",
        "                sys.exit()\n",
        "            else:\n",
        "                print(\"Enter again(1~8)\")\n",
        "                \n",
        " \n",
        "while True:\n",
        "    print(\"\\n *********************용돈기입장********************\\n\",\n",
        "          \"1.Login\\n\",\n",
        "          \"2.Register\\n\",\n",
        "          \"3.Quit\\n\",\n",
        "          \"***************************************************\\n\")\n",
        "    temp_num = input(\">\")\n",
        "    if temp_num==\"\":\n",
        "        print(\"[숫자를 입력해주세요]\")\n",
        "    else:\n",
        "        num=int(temp_num)\n",
        "        if num == 1:\n",
        "            login()\n",
        "        elif num == 2:\n",
        "            register()\n",
        "        elif num ==3:\n",
        "            print(\"[프로그램 종료.]\")\n",
        "            break"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": "\n *********************용돈기입장********************\n 1.Login\n 2.Register\n 3.Quit\n ***************************************************\n\n>2\n**********************Register*********************\n\n이름:하늘\n암호(숫자로 입력해주세요):99\n암호 확인:99\n[하늘 님 회원가입 성공]\n\n***************************************************\n\n *********************용돈기입장********************\n 1.Login\n 2.Register\n 3.Quit\n ***************************************************\n\n>1\n***********************Login**********************\n\n이름:하늘\n암호(숫자로 입력해주세요):99\n[하늘님 로그인 성공!]\n[하늘님 안녕하세요!]\n\n***************************************************\n\n*********************용돈기입장********************\n1. Retrieve\n2. Add\n3. Delete\n4. Update\n5. Budget Management\n6. Analysis\n7. Logout\n8. Quit\n***************************************************\n>2\n************************Add************************\n\n날짜(yyyymmdd): 20200619\n수입 (+) 또는 지출 (-) 금액을 +/-로 구분하여 입력해주세요: +50000\n[수입 항목] 1. 회사 2. 용돈 3. 기타 : 1\n내용: 월급\n\n***************************************************\n\n*********************용돈기입장********************\n1. Retrieve\n2. Add\n3. Delete\n4. Update\n5. Budget Management\n6. Analysis\n7. Logout\n8. Quit\n***************************************************\n>2\n************************Add************************\n\n날짜(yyyymmdd): 20200624\n수입 (+) 또는 지출 (-) 금액을 +/-로 구분하여 입력해주세요: -30000\n[지출 항목] 1. 음식 2. 쇼핑 3. 생활 4. 기타 : 1\n내용: 레스토랑\n\n***************************************************\n\n*********************용돈기입장********************\n1. Retrieve\n2. Add\n3. Delete\n4. Update\n5. Budget Management\n6. Analysis\n7. Logout\n8. Quit\n***************************************************\n>1\n**********************Retrieve*********************\n\n[조회 항목] 1. 전체조회 2. 월별 조회 3. 일별 조회 : 2\n날짜(yyyymm): 202006\n---------------------------------------------------------------\n\n<< 하늘 님의 내역>>\n\n---------------------------------------------------------------\n-----------------------2020년 06월--------------------------\n월\t화\t수\t목\t금\t토\t일\n1\t2\t3\t4\t5\t6\t7\n8\t9\t10\t11\t12\t13\t14\n15\t16\t17\t18\t19 *\t20\t21\n22\t23\t24 *\t25\t26\t27\t28\n29\t30\t\n\n------------------------------------------------------------\n1 \t 06 / 19 \t 회사 \t\t 월급 \t +50000\n2 \t 06 / 24 \t 음식 \t\t 레스토랑 \t -30000\n---------------------------------------------------------------\n이달의 수입: 50000원 / 이달의 지출: 30000원\n---------------------------------------------------------------\n***************************************************\n\n*********************용돈기입장********************\n1. Retrieve\n2. Add\n3. Delete\n4. Update\n5. Budget Management\n6. Analysis\n7. Logout\n8. Quit\n***************************************************\n",
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "trusted": true
      },
      "cell_type": "code",
      "source": [],
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python36",
      "display_name": "Python 3.6",
      "language": "python"
    },
    "language_info": {
      "mimetype": "text/x-python",
      "nbconvert_exporter": "python",
      "name": "python",
      "pygments_lexer": "ipython3",
      "version": "3.6.6",
      "file_extension": ".py",
      "codemirror_mode": {
        "version": 3,
        "name": "ipython"
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 2
}
